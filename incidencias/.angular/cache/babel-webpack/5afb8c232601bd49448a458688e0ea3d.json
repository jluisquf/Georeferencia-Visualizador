{"ast":null,"code":"import * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/map.service\";\nconst _c0 = [\"mapClustering\"];\nexport let MapaclimaComponent = /*#__PURE__*/(() => {\n  class MapaclimaComponent {\n    constructor(mapService) {\n      this.mapService = mapService; //Variables\n\n      this.fechaConsulta = \"2021-10-01\";\n      this.banderaPausa = false;\n      this.banderaMapa = true;\n      this.activarBtn = true;\n      this.paintLine = false;\n      this.rango = 0;\n      this.nombrePlayPausa = \"play_circle\";\n      this.banderaPlayPausa = true;\n      this.horario = \"00:00\";\n      this.markers = [];\n      this.tamSecciones = 0;\n      this.timeCtrl = new FormControl(this.horario, []);\n      this.rangeControl = new FormControl(this.rango, [Validators.max(143), Validators.min(0)]); //Iconos\n\n      this.IconFrio = L.icon({\n        iconUrl: '../.././assets/frio.png',\n        iconSize: [30, 30],\n        iconAnchor: [30, 30],\n        popupAnchor: [-15, -35]\n      });\n      this.IconCaliente = L.icon({\n        iconUrl: '../.././assets/calor.png',\n        iconSize: [30, 30],\n        iconAnchor: [30, 30],\n        popupAnchor: [-15, -35]\n      });\n      this.IconMedio = L.icon({\n        iconUrl: '../.././assets/medio.png',\n        iconSize: [30, 30],\n        iconAnchor: [30, 30],\n        popupAnchor: [-15, -35]\n      });\n      this.time = {\n        hour: 0,\n        minute: 2,\n        second: 0\n      }; //TIMEPICKER\n\n      this.lista = [\"\"]; //agrupa todos los lugares con incidencias\n\n      this.listaClima = [\"\"]; //agrupa todos los lugares con incidencias\n\n      this.mapServiceU = mapService;\n      this.rangeControl.valueChanges.subscribe(value => {\n        this.rango = value;\n        console.log(value); // this.banderaPausa = true;\n\n        this.ajustarlinea(this.rango);\n      });\n    }\n\n    ngAfterViewInit() {\n      //Obtenemos de manera dinamica los lugares a mostrar en el input select\n      this.mapServiceU.getCities().subscribe(data => {\n        this.lista = Object.values(data);\n      });\n      this.map = L.map('mapid').setView([19.37596, -99.07000], 11); //Fondo de trafico denso\n\n      L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n        maxZoom: 18,\n        minZoom: 10,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox/streets-v11'\n      }).addTo(this.map); //Aqui antes estaban los iconos\n    } //FIN OnInit\n\n\n    controlAtras(event) {\n      if (this.rango > 0) {\n        this.rango -= 1;\n        ;\n        this.ajustarlinea(this.rango);\n        event.preventDefault();\n        this.empezar();\n      }\n    }\n\n    controlAdelante(event) {\n      if (this.rango < 143) {\n        this.rango += 1;\n        ;\n        this.ajustarlinea(this.rango);\n        event.preventDefault();\n        this.empezar();\n      }\n    }\n\n    buscarFecha(event, value) {\n      this.banderaPausa = false;\n      event.preventDefault();\n      this.fechaConsulta = value;\n      console.log(this.fechaConsulta);\n      this.rango = 0;\n      this.limpiar();\n      this.banderaPausa = true;\n      this.activarBtn = false;\n      this.nombrePlayPausa = 'play_circle';\n      this.banderaPlayPausa = true;\n      this.pintarTermometros(this.fechaConsulta);\n      this.fechaTraficoLineas();\n      this.horario = \"00:00\";\n    }\n\n    reproducir(event) {\n      event.preventDefault();\n\n      if (this.banderaPlayPausa) {\n        if (this.banderaPausa) {//this.borrarClosters();\n        }\n\n        this.banderaPausa = false;\n        this.empezar();\n        this.nombrePlayPausa = 'pause';\n        this.banderaPlayPausa = false;\n      } else {\n        this.banderaPausa = true;\n        this.nombrePlayPausa = 'play_circle';\n        this.banderaPlayPausa = true;\n      }\n    }\n\n    ajustarlinea(rango) {\n      let horas = [\"00:00\", \"00:10\", \"00:20\", \"00:30\", \"00:40\", \"00:50\", \"01:00\", \"01:10\", \"01:20\", \"01:30\", \"01:40\", \"01:50\", \"02:00\", \"02:10\", \"02:20\", \"02:30\", \"02:40\", \"02:50\", \"03:00\", \"03:10\", \"03:20\", \"03:30\", \"03:40\", \"03:50\", \"04:00\", \"04:10\", \"04:20\", \"04:30\", \"04:40\", \"04:50\", \"05:00\", \"05:10\", \"05:20\", \"05:30\", \"05:40\", \"05:50\", \"06:00\", \"06:10\", \"06:20\", \"06:30\", \"06:40\", \"06:50\", \"07:00\", \"07:10\", \"07:20\", \"07:30\", \"07:40\", \"07:50\", \"08:00\", \"08:10\", \"08:20\", \"08:30\", \"08:40\", \"08:50\", \"09:00\", \"09:10\", \"09:20\", \"09:30\", \"09:40\", \"09:50\", \"10:00\", \"10:10\", \"10:20\", \"10:30\", \"10:40\", \"10:50\", \"11:00\", \"11:10\", \"11:20\", \"11:30\", \"11:40\", \"11:50\", \"12:00\", \"12:10\", \"12:20\", \"12:30\", \"12:40\", \"12:50\", \"13:00\", \"13:10\", \"13:20\", \"13:30\", \"13:40\", \"13:50\", \"14:00\", \"14:10\", \"14:20\", \"14:30\", \"14:40\", \"14:50\", \"15:00\", \"15:10\", \"15:20\", \"15:30\", \"15:40\", \"15:50\", \"16:00\", \"16:10\", \"16:20\", \"16:30\", \"16:40\", \"16:50\", \"17:00\", \"17:10\", \"17:20\", \"17:30\", \"17:40\", \"17:50\", \"18:00\", \"18:10\", \"18:20\", \"18:30\", \"18:40\", \"18:50\", \"19:00\", \"19:10\", \"19:20\", \"19:30\", \"19:40\", \"19:50\", \"20:00\", \"20:10\", \"20:20\", \"20:30\", \"20:40\", \"20:50\", \"21:00\", \"21:10\", \"21:20\", \"21:30\", \"21:40\", \"21:50\", \"22:00\", \"22:10\", \"22:20\", \"22:30\", \"22:40\", \"22:50\", \"23:00\", \"23:10\", \"23:20\", \"23:30\", \"23:40\", \"23:50\"];\n\n      for (let w = 0; w < 143; w++) {\n        if (rango == w) {\n          this.horario = horas[w];\n        }\n      }\n    }\n\n    pintarTermometros(fecha) {\n      let fechaTermos = fecha;\n      this.limpiar;\n      this.mapServiceU.getclima(fechaTermos).subscribe(data => {\n        this.listaClima = Object.values(data);\n        this.num = this.listaClima.length;\n        this.tamSecciones = this.listaClima[0][\"clima\"].length;\n        let marker;\n\n        for (let i = 0; i < this.tamSecciones; i++) {\n          let temperaturaSeccion = Number(JSON.stringify(data[0]['clima'][i].datos.main.temp));\n          let nombreSeccion = data[0]['clima'][i].datos.name;\n          let latitud = data[0]['clima'][i].latitud;\n          let longitud = data[0]['clima'][i].longitud;\n\n          if (temperaturaSeccion > 20) {\n            marker = new L.marker([latitud, longitud], {\n              icon: this.IconCaliente\n            }).addTo(this.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n            this.markers.push(marker);\n          } else {\n            if (temperaturaSeccion > 13) {\n              marker = new L.marker([latitud, longitud], {\n                icon: this.IconMedio\n              }).addTo(this.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n              this.markers.push(marker);\n            } else {\n              marker = new L.marker([latitud, longitud], {\n                icon: this.IconFrio\n              }).addTo(this.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n              this.markers.push(marker);\n            }\n          }\n        }\n      });\n      this.rango += 1;\n      ;\n      this.activarBtn = false;\n    }\n\n    limpiar() {\n      for (let i = 0; i < this.tamSecciones; i++) {\n        this.map.removeLayer(this.markers[i]);\n      }\n\n      this.markers = [];\n    }\n\n    empezar() {\n      let datos = this.num;\n      let data = this.listaClima;\n      let hora_minuto = this.rango;\n      let that = this;\n\n      function animacionTermometros() {\n        that.limpiar();\n        let marker;\n        let pausa = that.banderaPausa;\n        that.ajustarlinea(hora_minuto);\n\n        for (let i = 0; i < data[0][\"clima\"].length; i++) {\n          let temperaturaSeccion = Number(JSON.stringify(data[hora_minuto]['clima'][i].datos.main.temp));\n          let nombreSeccion = data[hora_minuto]['clima'][i].datos.name;\n          let latitud = data[hora_minuto]['clima'][i].latitud;\n          let longitud = data[hora_minuto]['clima'][i].longitud;\n\n          if (temperaturaSeccion > 18) {\n            marker = new L.marker([latitud, longitud], {\n              icon: that.IconCaliente\n            }).addTo(that.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n            that.markers.push(marker);\n          } else {\n            if (temperaturaSeccion < 12) {\n              marker = new L.marker([latitud, longitud], {\n                icon: that.IconFrio\n              }).addTo(that.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n              that.markers.push(marker);\n            } else {\n              marker = new L.marker([latitud, longitud], {\n                icon: that.IconMedio\n              }).addTo(that.map).bindPopup(nombreSeccion + \" °C: \" + temperaturaSeccion);\n              that.markers.push(marker);\n            }\n          }\n        }\n\n        hora_minuto++;\n\n        if (hora_minuto < datos && pausa == false) {\n          that.rango++;\n          setTimeout(animacionTermometros, 1000);\n        }\n      }\n\n      animacionTermometros();\n    }\n\n    fechaTraficoLineas() {\n      let that = this;\n\n      if (this.banderaMapa) {\n        this.mapServiceU.getAlcaldias().subscribe(data => {\n          L.geoJSON(data[0]).addTo(that.map);\n          this.banderaMapa = false;\n        });\n      }\n    }\n\n    pintarLineas(event) {\n      if (this.paintLine) {\n        this.paintLine = false;\n      } else {\n        this.paintLine = true;\n      }\n    }\n\n  }\n\n  MapaclimaComponent.ɵfac = function MapaclimaComponent_Factory(t) {\n    return new (t || MapaclimaComponent)(i0.ɵɵdirectiveInject(i1.MapService));\n  };\n\n  MapaclimaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapaclimaComponent,\n    selectors: [[\"app-mapaclima\"]],\n    viewQuery: function MapaclimaComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapContainer = _t.first);\n      }\n    },\n    decls: 29,\n    vars: 7,\n    consts: [[1, \"container\", \"text-center\"], [1, \"form-group\"], [\"type\", \"date\", 1, \"\", 3, \"value\"], [\"fechaTrafico\", \"\"], [1, \"btn\", \"btn-primary\", \"form\", 3, \"click\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"paintLine\", \"id\", \"paintLine\", 1, \"form-check-input\", 3, \"change\"], [\"for\", \"paintLine\", 1, \"form-check-label\"], [1, \"row\"], [1, \"col\"], [1, \"card\"], [1, \"fas\", \"fa-chart-area\"], [\"id\", \"mapid\", 1, \"card-body\"], [\"type\", \"time\", \"formControl\", \"timeCtrl\", 1, \"form-control\", \"col-md-2\", 3, \"value\", \"readonly\"], [1, \"btn\", \"btn-primary\", \"form\", \"col-md-2\", 3, \"disabled\", \"click\"], [1, \"material-icons\"]],\n    template: function MapaclimaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"input\", 2, 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function MapaclimaComponent_Template_button_click_4_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.buscarFecha($event, _r0.value);\n        });\n        i0.ɵɵtext(5, \"Buscar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function MapaclimaComponent_Template_input_change_7_listener($event) {\n          return ctx.pintarLineas($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \" Pintar lineas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\");\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelement(14, \"i\", 11);\n        i0.ɵɵtext(15, \" CLIMA CDMX \");\n        i0.ɵɵelement(16, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 1);\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function MapaclimaComponent_Template_button_click_20_listener($event) {\n          return ctx.controlAtras($event);\n        });\n        i0.ɵɵelementStart(21, \"span\", 15);\n        i0.ɵɵtext(22, \"skip_previous\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function MapaclimaComponent_Template_button_click_23_listener($event) {\n          return ctx.reproducir($event);\n        });\n        i0.ɵɵelementStart(24, \"span\", 15);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function MapaclimaComponent_Template_button_click_26_listener($event) {\n          return ctx.controlAdelante($event);\n        });\n        i0.ɵɵelementStart(27, \"span\", 15);\n        i0.ɵɵtext(28, \"skip_next\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.fechaConsulta);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"value\", ctx.horario)(\"readonly\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.activarBtn);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.activarBtn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.nombrePlayPausa);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.activarBtn);\n      }\n    },\n    styles: [\".form-check-input[_ngcontent-%COMP%], .form-check-label[_ngcontent-%COMP%]{margin-right:.5em}.form[_ngcontent-%COMP%]{margin-left:1em}.formStructure[_ngcontent-%COMP%]{display:inline-block;border:.3rem solid gray;padding:1em}.map-container[_ngcontent-%COMP%]{top:0;left:0;right:0;bottom:0;margin:30px}.map-frame[_ngcontent-%COMP%]{border:2px solid black;height:200px;width:300px}#map[_ngcontent-%COMP%], #mapClustering[_ngcontent-%COMP%], #mapTrafico[_ngcontent-%COMP%]{height:50%}#mapid[_ngcontent-%COMP%], #mapid2[_ngcontent-%COMP%], #mapid3[_ngcontent-%COMP%], #mapid4[_ngcontent-%COMP%], #mapid5[_ngcontent-%COMP%], #map[_ngcontent-%COMP%], #mapClustering[_ngcontent-%COMP%], #mapTrafico[_ngcontent-%COMP%], #mapDenso[_ngcontent-%COMP%]{height:70vh;margin:0;padding:20px}#mapClustering[_ngcontent-%COMP%]{display:block;height:60vh;margin:0;padding:20px}.container.text-center[_ngcontent-%COMP%]{margin-top:70px}.card[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#4caf50;background-clip:border-box;border:1px solid rgba(0,0,0,.125);color:#fff;font-family:\\\"Lucida Sans\\\",\\\"Lucida Sans Regular\\\",\\\"Lucida Grande\\\",\\\"Lucida Sans Unicode\\\",Geneva,Verdana,sans-serif;font-size:20px;border-radius:.25rem;margin-bottom:50px}.card-header[_ngcontent-%COMP%]{padding:.75rem 1.25rem;margin-bottom:0;background-color:#00000008;border-bottom:1px solid rgba(0,0,0,.125)}.card-header[_ngcontent-%COMP%]:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-header[_ngcontent-%COMP%] + .list-group[_ngcontent-%COMP%]   .list-group-item[_ngcontent-%COMP%]:first-child{border-top:0}.mr-1[_ngcontent-%COMP%], .mx-1[_ngcontent-%COMP%]{margin-right:.25rem!important}.mb-4[_ngcontent-%COMP%], .my-4[_ngcontent-%COMP%]{margin-bottom:1.5rem!important}\"]\n  });\n  return MapaclimaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}