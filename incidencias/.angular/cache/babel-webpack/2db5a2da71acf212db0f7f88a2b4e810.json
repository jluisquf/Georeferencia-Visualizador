{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/map.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ng2-charts\";\n\nfunction IncidenciasCdmxComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const suit_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(suit_r2);\n  }\n}\n\nfunction IncidenciasCdmxComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const suit2_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(suit2_r3);\n  }\n}\n\nexport let IncidenciasCdmxComponent = /*#__PURE__*/(() => {\n  class IncidenciasCdmxComponent {\n    constructor(mapService, fb) {\n      this.mapService = mapService;\n      this.fb = fb;\n      this.anio = [\"2019\", \"2020\"];\n      this.incidencia = [\"ACCIDENT\", \"POLICE\", \"ROAD_CLOSED\", \"HAZARD\", \"JAM\", \"CHIT_CHAT\"];\n      this.listform = this.fb.group({\n        anio: [''],\n        incidencia: ['']\n      });\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          xAxes: [{}],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        plugins: {\n          datalabels: {\n            anchor: 'end',\n            align: 'end'\n          }\n        }\n      };\n      this.barChartLabels = ['Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio'];\n      this.barChartType = 'bar';\n      this.barChartLegend = true;\n      this.barChartData = [{\n        data: [892420, 989092, 755321, 912970, 922403],\n        label: '2019'\n      }, {\n        data: [1012349, 586073, 80753, 80541, 76972],\n        label: '2020'\n      }];\n      this.mapServiceU = mapService;\n    }\n\n    onSubmit() {\n      let tipoIncidencia = this.listform.value.incidencia;\n      let fechaInc = this.listform.value.anio; // alert(this.listform.value.anio);\n      // alert(this.listform.value.incidencia);\n\n      this.mapServiceU.getIncidencias().subscribe(data => {\n        var incidencia;\n        var totales = [];\n        var etiquetasFinales = [];\n        var totalMes, etiquetaMes;\n\n        for (var i = 0; i < data[0].incidencia.length; i++) {\n          if (data[0].incidencia[i].anio == fechaInc) {\n            for (var j = 0; j < data[0].incidencia[i].mes.length; j++) {\n              for (var k = 0; k < data[0].incidencia[i].mes[j].datos[0].tipo.length; k++) {\n                if (tipoIncidencia.toLowerCase() == data[0].incidencia[i].mes[j].datos[0].tipo[k].tipo) {\n                  totalMes = data[0].incidencia[i].mes[j].datos[0].tipo[k].total;\n                  etiquetaMes = data[0].incidencia[i].mes[j].mes;\n                  totales.push(totalMes);\n                  etiquetasFinales.push(etiquetaMes);\n                }\n              }\n            }\n          }\n        }\n\n        console.log(\"Total \" + totales);\n        console.log(\"Etiquetas de meses\" + etiquetasFinales);\n        this.randomize(totales, etiquetasFinales, fechaInc, tipoIncidencia);\n      });\n    }\n\n    ngOnInit() {} // events\n\n\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    randomize(t, e, f, i) {\n      console.log(i);\n\n      if (i == \"Totales Incidencias\" && f == \"Todos\") {\n        this.barChartData[0].data = [892420, 989092, 755321, 912970, 922403];\n        this.barChartData[1].data = [1012349, 586073, 80753, 80541, 76972];\n        this.barChartData[0].label = '2019';\n        this.barChartData[1].label = '2020';\n      } else {\n        // Only Change 3 values\n        const data = t;\n        const labels = e;\n        const fecha = f;\n        this.barChartData[0].data = data;\n        this.barChartData[0].label = fecha;\n        delete this.barChartData[1].data;\n        this.barChartLabels = labels;\n      }\n    }\n\n  }\n\n  IncidenciasCdmxComponent.ɵfac = function IncidenciasCdmxComponent_Factory(t) {\n    return new (t || IncidenciasCdmxComponent)(i0.ɵɵdirectiveInject(i1.MapService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  IncidenciasCdmxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncidenciasCdmxComponent,\n    selectors: [[\"app-incidencias-cdmx\"]],\n    decls: 26,\n    vars: 7,\n    consts: [[\"id\", \"hola\", 1, \"container-fluid\"], [\"formGroup\", \"listform\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col-sm-4\"], [\"formControlName\", \"anio\", 1, \"d-inline\", \"form-control\"], [\"disabled\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"incidencia\", 1, \"d-inline\", \"form-control\"], [1, \"col-sm-3\"], [\"mtype\", \"submit\", 1, \"btn\", \"btn-primary\"], [2, \"display\", \"block\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"chartType\"]],\n    template: function IncidenciasCdmxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2, \"Incidencias de la ciudad de mexico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function IncidenciasCdmxComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"select\", 4);\n        i0.ɵɵelementStart(7, \"option\", 5);\n        i0.ɵɵtext(8, \"Selecciona el A\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\");\n        i0.ɵɵtext(10, \" Todos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, IncidenciasCdmxComponent_option_11_Template, 2, 1, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3);\n        i0.ɵɵelementStart(13, \"select\", 7);\n        i0.ɵɵelementStart(14, \"option\", 5);\n        i0.ɵɵtext(15, \"Selecciona el mes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\");\n        i0.ɵɵtext(17, \"Totales Incidencias\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, IncidenciasCdmxComponent_option_18_Template, 2, 1, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8);\n        i0.ɵɵelementStart(20, \"button\", 9);\n        i0.ɵɵtext(21, \"Buscar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelementStart(23, \"div\");\n        i0.ɵɵelementStart(24, \"div\", 10);\n        i0.ɵɵelement(25, \"canvas\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.anio);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.incidencia);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"chartType\", ctx.barChartType);\n      }\n    },\n    directives: [i3.NgForOf, i4.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return IncidenciasCdmxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}